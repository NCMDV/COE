# Generated by Django 4.2.9 on 2024-01-18 15:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chatlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_message', models.CharField(blank=True, null=True)),
                ('ai_response', models.CharField(blank=True, null=True)),
                ('inference_time', models.FloatField(blank=True, null=True)),
                ('total_tokens', models.FloatField(blank=True, null=True)),
                ('prompt_tokens', models.FloatField(blank=True, null=True)),
                ('total_cost_usd', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chatlogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceData',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('insurance_policy', models.CharField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('lifestyle', models.CharField(blank=True, null=True)),
                ('medical_history', models.CharField(blank=True, null=True)),
                ('annual_income', models.FloatField(blank=True, null=True)),
                ('total_premium', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'insurance_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItQasData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, null=True)),
                ('answer', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'it_qas_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Qna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, null=True)),
                ('answer', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qna',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharepointData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, null=True)),
                ('url_link', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sharepoint_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.FloatField(blank=True, null=True)),
                ('username', models.CharField(blank=True, null=True)),
                ('password', models.CharField(blank=True, null=True)),
                ('email_add', models.CharField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, null=True)),
                ('middle_name', models.CharField(blank=True, null=True)),
                ('last_name', models.CharField(blank=True, null=True)),
                ('access_level', models.FloatField(blank=True, null=True)),
                ('access_type', models.CharField(blank=True, null=True)),
                ('department', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatlogsTest',
            fields=[
                ('id', models.CharField(primary_key=True, serialize=False)),
                ('start_datetime', models.DateTimeField()),
                ('duration', models.FloatField(default=0)),
                ('user_id', models.CharField()),
                ('interaction_count', models.IntegerField(default=0)),
                ('user_typing_time', models.FloatField(default=0)),
                ('chatbot_inference_time', models.FloatField(default=0)),
                ('user_feedback', models.IntegerField(default=0)),
                ('escalation', models.IntegerField(default=0)),
                ('transcript', models.TextField(default='')),
                ('total_tokens', models.IntegerField(default=0)),
                ('prompt_tokens', models.IntegerField(default=0)),
                ('total_cost', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'chatlogs_test',
            },
        ),
    ]
